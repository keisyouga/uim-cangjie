* uim-cangjie

[[https://en.wikipedia.org/wiki/Cangjie_input_method][cangjie]] input module for [[https://github.com/uim/uim][uim]].

* requirement

uim (version 1.8.6 or later)

* install

** install to =/usr/share/uim/=

- copy cangjieload.scm to =/usr/share/uim/=.
- copy cangjie3.table cangjie5.table to =/usr/share/uim/tables/=.
- run following command

#+BEGIN_SRC bash
# uim-module-manager --register cangjieload
#+END_SRC

** install to =~/.uim.d/plugin/=

- copy cangjieload.scm to =~/.uim.d/plugin/=.
- copy cangjie3.table cangjie5.table to =~/.uim.d/tables/=.
- run following command

#+BEGIN_SRC
$ uim-module-manager --register cangjieload --path ~/.uim.d/plugin
#+END_SRC

- edit =~/.uim=, add following code.

#+BEGIN_SRC scheme
;; by default, /usr/share/uim/ct.scm search only /usr/share/uim/tables.
;; modify it to search tables in ~/.uim.d/tables/.
(require "ct.scm")
(define ct-lib-find-seq
  (lambda (seq table)
    (let ((looked (look-lib-look
		   #f
		   #f
		   1
		   ;;(string-append (sys-pkgdatadir) "/tables/" table)
		   (string-append (get-config-path #f) "/tables/" table)
		   (apply string-append seq))))
      (if (and
	   looked
	   (not (null? looked))
	   (= (string-contains (car looked) " " 0) 0))
	  (list (list seq) (read-from-string (car looked)))
	  #f))))

(define ct-lib-find-partial-seq
  (lambda (seq table)
    ;; search 2 entries matching (including partial match) with look
    (let ((looked (look-lib-look
		   #f
		   #f
		   2
		   ;;(string-append (sys-pkgdatadir) "/tables/" table)
		   (string-append (get-config-path #f) "/tables/" table)
		   (apply string-append seq))))
      (if (and
	   looked
	   (not (null? looked)))
	  (let ((first (car looked))
		(second (if (null? (cdr looked))
			    '()
			    (car (cdr looked)))))
	    (cond
	     ;; second one is partial
	     ((and
	       (not (null? second))
	       (string=? (substring first 0 1) " "))
	      (let ((partial
                     (reverse
		      (string-to-list (car (string-split second " ")))))
		    (cands
                     (apply string-append (cdr (string-split second " ")))))
		(list (list (append seq partial)) (read-from-string cands))))
	     ;; first one is partial
	     ((not (string=? (substring first 0 1) " "))
	      (let ((partial
                     (reverse
		      (string-to-list (car (string-split first " ")))))
		    (cands
                     (apply string-append (cdr (string-split first " ")))))
		(list (list (append seq partial)) (read-from-string cands))))
	     (else
              #f)))
	  #f))))

(define ct-find-cands-incl-minimal-partial
  (lambda (seq table)
    (let ((looked (look-lib-look
		   #f
		   #f
		   5000 ;; is it sufficient enough?
		   ;;(string-append (sys-pkgdatadir) "/tables/" table)
		   (string-append (get-config-path #f) "/tables/" table)
		   (apply string-append seq))))
      (if (and
	   looked
	   (not (null? looked)))
	  (let* ((min-partial-pos
		  (lambda (lst)
		    (let ((maxlen (apply max (map string-length lst))))
		      (let loop ((n 1))
			(if (= maxlen n)
			    0 ;; not found
			    (if (not
				 (null?
				  (filter
                                   (lambda (x)
                                     (string=? (substring x n (+ n 1)) " "))
                                   lst)))
				n
				(loop (+ n 1))))))))
		 (pos (min-partial-pos looked))
		 (match
		  (filter
                   (lambda (x)
                     (or (string=? (substring x pos (+ pos 1)) " ")
                         (string=? (substring x 0 1) " ")))
                   looked))
		 (str (map (lambda (x) (string-split x " ")) match))
		 (residual (map (lambda (x) (car  x)) str))
		 (cands
		  (map
                   (lambda (x)
                     (read-from-string (apply string-append (cdr x)))) str))
		 (lst (map (lambda (x y) (cons x y)) cands residual)))
	    lst)
	  '()))))
#+END_SRC

* usage

** in X

#+BEGIN_SRC
$ uim-xim --engine=cangjie3
#+END_SRC

or

#+BEGIN_SRC
$ uim-xim --engine=cangjie5
#+END_SRC

** in console

#+BEGIN_SRC
$ uim-fep -u cangjie3
#+END_SRC

or

#+BEGIN_SRC
$ uim-fep -u cangjie5
#+END_SRC

* uninstall

** uninstall from =/usr/share/uim/=

- run following command

#+BEGIN_SRC
# uim-module-manager --unregister cangjieload
#+END_SRC

- delete copied files

  - /usr/share/uim/cangjieload.scm
  - /usr/share/uim/tables/cangjie3.table
  - /usr/share/uim/tables/cangjie5.table

** uninstall from =~/.uim.d/plugin/=

- run following command

#+BEGIN_SRC
$ uim-module-manager --unregister cangjieload --path ~/.uim.d/plugin
#+END_SRC

- delete copied files

  - ~/.uim.d/plugin/cangjieload.scm
  - ~/.uim.d/tables/cangjie3.table
  - ~/.uim.d/tables/cangjie5.table
